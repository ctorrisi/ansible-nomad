---
# File: install.yml - package installation tasks for Nomad

- name: Install OS packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ nomad_os_packages }}"
  tags: installation

- name: Validate remote Nomad directory
  file:
    path: /tmp/nomad
    state: directory
    mode: 0700

- name: Check Nomad package checksum file
  stat:
    path: "/tmp/nomad/nomad_{{ nomad_version }}_SHA256SUMS"
  tags: installation
  register: nomad_checksum

- name: Get Nomad package checksum file
  get_url:
    url: "{{ nomad_checksum_file_url }}"
    dest: "/tmp/nomad/nomad_{{ nomad_version }}_SHA256SUMS"
  tags: installation
  when: not nomad_checksum.stat.exists

- name: Get Nomad package checksum
  shell: |
    set -o pipefail
    grep "{{ nomad_pkg }}" "/tmp/nomad/nomad_{{ nomad_version }}_SHA256SUMS"  | awk '{print $1}'
  args:
    executable: /bin/bash
  register: nomad_sha256
  tags: installation

- name: Check Nomad package file
  stat:
    path: "/tmp/nomad/{{ nomad_pkg }}"
  register: nomad_package

- name: Download Nomad
  get_url:
    url: "{{ nomad_zip_url }}"
    dest: "/tmp/nomad/{{ nomad_pkg }}"
    checksum: "sha256:{{ nomad_sha256.stdout }}"
    timeout: 42
  register: nomad_download
  tags: installation
  when: not nomad_package.stat.exists

- name: Unarchive and Install Nomad
  unarchive:
    remote_src: true
    src: "/tmp/nomad/{{ nomad_pkg }}"
    dest: "{{ nomad_bin_dir }}"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: 0755
  register: nomad_install
  notify:
    - restart nomad
  when: nomad_download is changed
  tags: installation

- name: Daemon reload systemd in case the binaries upgraded
  systemd: daemon_reload=yes
  become: true
  when:
    - ansible_service_mgr == "systemd"
    - nomad_install is changed

- name: Cleanup
  file:
    path: "/tmp/nomad"
    state: absent
  tags: installation
